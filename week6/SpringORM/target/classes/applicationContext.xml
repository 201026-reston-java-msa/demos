<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
		
	<!-- Enable annotations -->
	<context:annotation-config />
	
	<!-- Enable @Transactional --> <!-- Transactional annotation defines the scope
	of a single database transaction . -->
	<tx:annotation-driven/>
	
	<!--  Package Scan -->
	<context:component-scan base-package="com.revature.repository" />
	<context:component-scan base-package="com.revature.service" />
	
	<!--  Hibernate Integration with Contextual Sessions -->
	
	
	
		<!-- DataSource Configuration here (JDBC) -->
	<bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- If you want to use Environment variables, use the example below -->
		<!--<property name="url" value ="#{systemEnvironment['ENV NAME']}">-->
	
		<property name="driverClassName" value="org.postgresql.Driver"/>
		<property name="url" value="jdbc:postgresql://spring-orm-demo.c9chs4ontkbe.us-east-1.rds.amazonaws.com:5432/postgres"/>
		<property name="username" value="postgres" />
		<property name="password" value="postgres" />
	</bean>
	
	<!-- SessionFactory Configuration (Hibernate) -->
	<bean name="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!--  Manually Inject Datasource ^ -->
		<property name="dataSource" ref="dataSource"/>
		
		<!--  Annotation Mapping -->
		<property name="packagesToScan" value="com.revature.model"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
    			<prop key="show_sql">true</prop>
    			<prop key="hibernate.hbm2ddl.auto">create</prop>
    			<prop key="hibernate.default_schema">public</prop>
			</props>
		</property>
		
	</bean>	
		
	<!-- bean TransactionManager (this is a bean!) (Hibernate) -->
	<bean name="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<!-- This makes all sessions a transaction -->
		<!-- property Manually inject SessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>	
</beans>